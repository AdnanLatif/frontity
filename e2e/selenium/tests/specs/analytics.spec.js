// Generated by Selenium IDE
const { Builder, By, Key, until } = require("selenium-webdriver");
const assert = require("assert");

describe("analytics", function () {
  this.timeout(600000);
  let vars;
  beforeEach(async function () {
    vars = {};
  });
  const pageviewHome = {
    link: "/",
    title: "Homepage Title",
  };

  const pageviewSomePost = {
    link: "/some-post/",
    title: "Some Post Title",
  };

  const pageviewSomeOtherPost = {
    link: "/some-other-post/",
    title: "Some Post Title",
  };

  const someEvent = {
    name: "some event",
    payload: { content: "some content" },
  };

  it("analytics", async function () {
    // 1. Should send the first pageview
    await driver.get("http://localhost:3000/?frontity_name=analytics");
    assert.deepEqual(
      await driver.executeScript(
        "return window.frontity.state.testAnalytics.pageviews[0]"
      ),
      pageviewHome
    );

    // // 2. Should send a pageview if the page changes
    await driver.findElement(By.id("change-link")).click();
    assert.deepEqual(
      await driver.executeScript(
        "return window.frontity.state.testAnalytics.pageviews[1]"
      ),
      pageviewSomePost
    );

    // // 3. Should send a pageview if the page changes and title is the same
    await driver.findElement(By.id("change-link-post-2")).click();
    await driver.executeScript("return window.history.back()");
    assert.deepEqual(
      await driver.executeScript(
        "return window.frontity.state.testAnalytics.pageviews[1]"
      ),
      pageviewSomePost
    );
    assert.deepEqual(
      await driver.executeScript(
        "return window.frontity.state.testAnalytics.pageviews[2]"
      ),
      pageviewSomeOtherPost
    );
    assert.deepEqual(
      await driver.executeScript(
        "return window.frontity.state.testAnalytics.pageviews[3]"
      ),
      pageviewSomePost
    );

    // 4. Should send pageviews when going back or forward
    await driver.executeScript("return window.history.back()");
    assert.deepEqual(
      await driver.executeScript(
        "return window.frontity.state.testAnalytics.pageviews[4]"
      ),
      pageviewHome
    );

    await driver.executeScript("return window.history.forward()");
    assert.deepEqual(
      await driver.executeScript(
        "return window.frontity.state.testAnalytics.pageviews[5]"
      ),
      pageviewSomePost
    );

    // // 5. Should send events
    await driver.findElement(By.id("send-event")).click();
    await driver.findElement(By.id("send-event")).click();
    await driver.findElement(By.id("send-event")).click();
    assert.deepEqual(
      await driver.executeScript(
        "return window.frontity.state.testAnalytics.events[0]"
      ),
      someEvent
    );
    assert.deepEqual(
      await driver.executeScript(
        "return window.frontity.state.testAnalytics.events[1]"
      ),
      someEvent
    );
    assert.deepEqual(
      await driver.executeScript(
        "return window.frontity.state.testAnalytics.events[2]"
      ),
      someEvent
    );
  });
});
