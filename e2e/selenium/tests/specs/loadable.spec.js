// Generated by Selenium IDE
const { Builder, By, Key, until } = require("selenium-webdriver");
const assert = require("assert");

describe("loadable", function () {
  this.timeout(600000);
  let vars;
  beforeEach(async function () {
    vars = {};
  });
  it("loadable", async function () {
    // Test name: loadable
    // Step # | name | target | value
    // 1 | open | /?frontity_name=loadable |
    await driver.get("http://localhost:3000/?frontity_name=loadable");
    // 2 | assertText | css=[data-test-id='dynamic-div'] | I am the Dynamic1 component
    assert(
      (await driver
        .findElement(By.css("[data-test-id='dynamic-div']"))
        .getText()) == "I am the Dynamic1 component"
    );
    // 3 | assertText | css=[data-test-id='dynamic2-div'] | I am the Dynamic2 component
    assert(
      (await driver
        .findElement(By.css("[data-test-id='dynamic2-div']"))
        .getText()) == "I am the Dynamic2 component"
    );
    // 4 | assertText | css=[data-test-id='toggle-div'] | OFF
    assert(
      (await driver
        .findElement(By.css("[data-test-id='toggle-div']"))
        .getText()) == "OFF"
    );
    // 5 | click | css=[data-test-id='toggle-button'] |
    await driver.findElement(By.css("[data-test-id='toggle-button']")).click();
    // 6 | assertText | css=[data-test-id='toggle-div'] | ON
    assert(
      (await driver
        .findElement(By.css("[data-test-id='toggle-div']"))
        .getText()) == "ON"
    );
  });
});
