// Generated by Selenium IDE
const { Builder, By, Key, until } = require("selenium-webdriver");
const assert = require("assert");

describe("tiny-router", function () {
  this.timeout(600000);
  let vars;
  beforeEach(async function () {
    vars = {};
  });
  it("tiny-router", async function () {
    // Test name: tiny-router
    // Step # | name | target | value
    // 1 | open | /?frontity_name=tiny-router |
    await driver.get("http://localhost:3000/?frontity_name=tiny-router");
    // 2 | assertText | css=[data-test-id="content"] | Home
    assert(
      (await driver
        .findElement(By.css('[data-test-id="content"]'))
        .getText()) == "Home"
    );
    // 3 | click | css=[data-button-id="switch-to-about"] |
    await driver
      .findElement(By.css('[data-button-id="switch-to-about"]'))
      .click();
    // 4 | executeScript | return window.location.pathname | pathname
    vars["pathname"] = await driver.executeScript(
      "return window.location.pathname"
    );
    // 5 | assert | pathname | /about/
    assert(vars["pathname"].toString() == "/about/");
    // 6 | assertText | css=[data-test-id="content"] | About
    assert(
      (await driver
        .findElement(By.css('[data-test-id="content"]'))
        .getText()) == "About"
    );
    // 7 | runScript | return window.history.back() |
    await driver.executeScript("return window.history.back()");
    // 8 | assertText | css=[data-test-id="content"] | Home
    assert(
      (await driver
        .findElement(By.css('[data-test-id="content"]'))
        .getText()) == "Home"
    );
  });
});
