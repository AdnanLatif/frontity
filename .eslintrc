{
  "parser": "@typescript-eslint/parser",
  "extends": [
    "eslint:recommended",
    "plugin:import/recommended",
    "plugin:react/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:jest/recommended",
    "plugin:cypress/recommended"
  ],
  "plugins": ["jsdoc", "react-hooks"],
  "rules": {
    "react-hooks/rules-of-hooks": "error", // Checks rules of Hooks
    "react-hooks/exhaustive-deps": "warn", // Checks effect dependencies
    "react/prop-types": "off",
    "import/named": "off",
    "jsdoc/check-examples": 2,
    "jsdoc/check-indentation": 0,
    "jsdoc/check-param-names": 0,
    "jsdoc/check-syntax": 2,
    "jsdoc/check-types": 2,
    "jsdoc/implements-on-classes": 2,
    "jsdoc/match-description": 2,
    "jsdoc/newline-after-description": 2,
    "jsdoc/no-types": 2,
    "jsdoc/no-undefined-types": 2,
    "jsdoc/require-description": [
      "error",
      {
        "contexts": ["any"]
      }
    ],
    "jsdoc/require-description-complete-sentence": 2,
    "jsdoc/require-example": 0,
    "jsdoc/require-param": [
      "error",
      {
        "checkDestructured": false
      }
    ],
    "jsdoc/require-param-description": 2,
    "jsdoc/require-param-name": 2,
    "jsdoc/require-param-type": 0,
    "jsdoc/require-returns": 2,
    "jsdoc/require-returns-check": 2,
    "jsdoc/require-returns-description": 2,
    "jsdoc/require-returns-type": 0,
    "jsdoc/valid-types": 2,
    "jsdoc/require-jsdoc": [
      "error",
      {
        "require": {
          "ClassDeclaration": true,
          "MethodDefinition": true,
          "FunctionDeclaration": true,
          "ArrowFunctionExpression": false
        },
        "contexts": [
          "TSInterfaceDeclaration",
          "TSTypeAliasDeclaration",
          "TSEnumDeclaration",
          "TSPropertySignature",
          "VariableDeclarator > ArrowFunctionExpression"
        ]
      }
    ]
  },
  "env": {
    "browser": true,
    "node": true,
    "es6": true,
    "cypress/globals": true
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      },
      "typescript": {
        "alwaysTryTypes": true
      }
    }
  },
  "overrides": [
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "plugins": ["eslint-plugin-tsdoc"],
      "extends": [
        "plugin:@typescript-eslint/recommended"
      ],
      "rules": {
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unused-vars": [
          "error",
          { "argsIgnorePattern": "^_", "ignoreRestSiblings": true }
        ],
        "tsdoc/syntax": "error",
        // The option `allowTypedFunctionExpressions` doesn't work with
        // nested typed functions, so this rule is disabled.
        // Bug: https://github.com/typescript-eslint/typescript-eslint/issues/2183
        // Docs: https://github.com/typescript-eslint/typescript-eslint/blob/v4.6.0/packages/eslint-plugin/docs/rules/explicit-module-boundary-types.md#allowtypedfunctionexpressions
        "@typescript-eslint/explicit-module-boundary-types": "off"
      }
    },
    {
      "files": ["**/__tests__/*.{js,ts,jsx,tsx}", "**/*.spec.js"],
      "rules": {
        "jsdoc/require-jsdoc": 0,
        "jsdoc/require-description": 0,
        "tsdoc/syntax": 0
      }
    }
  ]
}
